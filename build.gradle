buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        gradleDockerVersion = '1.2'
        dockerRepo = ''
        imageId = '0.0.1'

    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'com.practice.employee.skill'
version = "${imageId}-SNAPSHOT"
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}



task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName.toLowerCase()
    dockerfile = file('src/main/docker/Dockerfile')
    tag = "${dockerRepo}"+ applicationName
    tagVersion = "${imageId}"
    doFirst {
        copy {
            from jar
            into stageDir

        }
    }
}